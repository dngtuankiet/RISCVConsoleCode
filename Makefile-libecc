BOOTROM_DIR?=$(abspath .)

#Libecc
LIBECC_DIR = /home/tuankiet/tools/libecc

LIBARITH = $(LIBECC_DIR)/build-riscv/libarith.a
LIBEC = $(LIBECC_DIR)/build-riscv/libec.a
LIBSIGN = $(LIBECC_DIR)/build-riscv/libsign.a
LIBECC = $(LIBARITH) $(LIBEC) $(LIBSIGN)

LIBECC_INCLUDE = -I$(LIBECC_DIR)/include

ISACONF?=RV32IMAC
CROSSCOMPILE?=riscv64-unknown-elf
CC=$(CROSSCOMPILE)-gcc
CCX=$(CROSSCOMPILE)-g++
OBJCOPY=$(CROSSCOMPILE)-objcopy
OBJDUMP=$(CROSSCOMPILE)-objdump
ifeq ($(ISACONF),RV64GC)
CFLAGS_ARCH=-march=rv64imafdc -mabi=lp64d
else ifeq ($(ISACONF),RV64IMAC)
CFLAGS_ARCH=-march=rv64imac -mabi=lp64
else ifeq ($(ISACONF),RV32GC)
CFLAGS_ARCH=-march=rv32imafdc -mabi=ilp32d
else #RV32IMAC
CFLAGS_ARCH=-march=rv32imac -mabi=ilp32
endif

LIBECC_FLAGS = -DCUSTOM_LIBECC -DCUSTOM_RISCV_PRINT -DCUSTOM_RAND_GENERATE_BLOCK -DWORDSIZE=32 -DUSER_NN_BIT_LEN=256 -DWITH_LIBECC_CONFIG_OVERRIDE -DWITH_CURVE_SECP256K1 -DWITH_HASH_SHA256 -DWITH_SIG_ECDSA -DWITH_ECCCDH
CFLAGS=$(CFLAGS_ARCH) -mcmodel=medany -O1 -std=gnu11 -Wall -nostartfiles
CFLAGS+= -fno-common -g -DENTROPY=0 -DNONSMP_HART=0
CFLAGS+= $(LIBECC_FLAGS)
CFLAGS+= -I $(BOOTROM_DIR)/include $(LIBECC_INCLUDE) -I. -I./src -I./kprintf -I./lib -I./clkutils -I./libfdt $(ADD_OPTS)
LFLAGS=-static -nostdlib --specs=htif_nano.specs -L $(BOOTROM_DIR)/linker -T memory.lds -T link.lds
BUILD_DIR?=$(abspath ./build)

EXT_DEPS_SRC = $(LIBECC_DIR)/src/external_deps/*.c
EXT_DEPS_O = $(LIBECC_DIR)/src/external_deps/rand.o \
			 $(LIBECC_DIR)/src/external_deps/print.o

LIBECC_UTILS_O= \
	libecc_utils/libecc_utils.o

LIB_FS_O= \
	uart/uart.o \
	trng/trng.o \
	$(BUILD_DIR)/version.o \
	clkutils/clkutils.o \
	kprintf/kprintf.o \
	plic/plic_driver.o \
	i2c/driver.o \
	lib/memcpy.o \
	lib/memset.o \
	lib/strcmp.o \
	lib/strncmp.o \
	lib/strlen.o \
	lib/memchr.o \
	lib/memmove.o \
	lib/memcmp.o \
	lib/strrchr.o \
	lib/strnlen.o \
	libfdt/fdt.o libfdt/fdt_ro.o libfdt/fdt_wip.o libfdt/fdt_sw.o libfdt/fdt_rw.o libfdt/fdt_strerror.o libfdt/fdt_empty_tree.o \
	libfdt/fdt_addresses.o libfdt/fdt_check.o

MAIN_O= \
	src/start.o \
	src/libecc-main.o

BASIC_O= \
	src/start.o \
	src/libecc-basic.o

$(BUILD_DIR)/version.c:
	mkdir -p $(BUILD_DIR)
	echo "const char *gitid = \"$(shell git describe --always --dirty)\";" > $(BUILD_DIR)/version.c
	echo "const char *gitdate = \"$(shell git log -n 1 --date=short --format=format:"%ad.%h" HEAD)\";" >> $(BUILD_DIR)/version.c
	echo "const char *gitversion = \"$(shell git rev-parse HEAD)\";" >> $(BUILD_DIR)/version.c

%.o: %.S
	$(CC) $(CFLAGS) -DFSBL_TARGET_ADDR=$(FSBL_TARGET_ADDR) -c $< -o $@

%.o: %.c %.h
	$(CC) $(CFLAGS) -DFSBL_TARGET_ADDR=$(FSBL_TARGET_ADDR) -c $< -o $@

%.o: %.cpp
	$(CCX) $(CFLAGS) -DFSBL_TARGET_ADDR=$(FSBL_TARGET_ADDR) -c $< -o $@


#======Basic======#

# elf_basic := $(BUILD_DIR)/out.elf
# $(elf_basic): $(BASIC_O) $(LIB_FS_O) $(LIBECC_UTILS_O) $(EXT_DEPS_O)
# 	mkdir -p $(BUILD_DIR)
# 	$(CC) $(CFLAGS) $(LFLAGS) -o $@ $(LIB_FS_O) $(LIBECC_UTILS_O) $(EXT_DEPS_O) $(LIBECC) -lgcc -lm -lc

# .PHONY: elf_basic
# elf_basic: $(elf_basic)

# basic := $(BUILD_DIR)/out.bin
# $(basic): $(elf_basic)
# 	$(OBJCOPY) -O binary $< $@
# 	$(OBJDUMP) -d $^ > $@.dump

# .PHONY: basic
# basic: $(basic)


#======Binary======#

elf := $(BUILD_DIR)/out.elf
$(elf): $(BASIC_O) $(LIB_FS_O) $(LIBECC_UTILS_O) $(EXT_DEPS_O)
	mkdir -p $(BUILD_DIR)
	$(CC) $(CFLAGS) $(LFLAGS) -o $@ $(BASIC_O) $(LIB_FS_O) $(LIBECC_UTILS_O) $(EXT_DEPS_O) $(LIBECC) -lgcc -lm -lc

.PHONY: elf
elf: $(elf)

bin := $(BUILD_DIR)/out.bin
$(bin): $(elf)
	$(OBJCOPY) -O binary $< $@
	$(OBJDUMP) -d $^ > $@.dump

.PHONY: bin
bin: $(bin)

hex := $(BUILD_DIR)/out.hex
$(hex): $(bin)
	od -t x4 -An -w4 -v $< > $@

.PHONY: hex
hex: $(hex)

.PHONY: clean-full
clean-full:
	rm -rf $(hex) $(elf) $(LIB_FS_O) $(MAIN_O) $(BASIC_O) build
